{"version":3,"sources":["components/TweetInput.js","utils/colors.js","components/EditDialog.js","components/CommentDialog.js","components/TweetMenu.js","components/PostTextDisplay.js","components/CommentTextDialog.js","components/CommentDisplay.js","components/ViewDialog.js","components/TweetMain.js","store/actions/tweetActions.js","components/Home.js","components/ButtonAppBar.js","store/actions/authActions.js","utils/storage.js","store/actions/userActions.js","containers/ButtonAppBar.js","user/SignIn.js","containers/SignIn.js","user/SignUp.js","containers/SignUp.js","user/DeleteUser.js","containers/DeleteUser.js","user/Profile.js","containers/Profile.js","user/ForgetPassword.js","containers/ForgetPassword.js","user/ResetPassword.js","containers/ResetPassword.js","user/EditUser.js","auth/PrivateRoute.js","auth/index.js","Root.js","App.js","serviceWorker.js","store/reducers/tweetReducers.js","store/reducers/authReducers.js","store/reducers/userReducers.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["TweetInput","componentDidMount","postData","FormData","input","React","createRef","onSubmit","event","preventDefault","value","current","trim","data","props","set","console","log","entries","credentials","userId","user","_id","token","body","this","classes","autoComplete","TextField","required","fullWidth","multiline","rows","placeholder","inputRef","Grid","container","justify","item","Button","disabled","variant","color","type","className","tweetButton","Component","defaultProps","v","e","withStyles","theme","paper","padding","spacing","unit","height","marginTop","connect","state","ownProps","authError","auth","redirectToReferer","loading","tweets","tweetError","postError","dispatch","colors","red","pink","purple","indigo","blue","teal","green","lightGreen","amber","orange","deepOrange","deepPurple","blueGrey","colorFrom","string","index","toString","split","map","char","charCodeAt","reduce","sum","num","length","error","EditDiaglog","openEdit","Transition","MenuhandleClose","text","handleCloseEdit","onUpdatePostItem","handleChangeEditText","Dialog","aria-labelledby","open","TransitionComponent","keepMounted","maxWidth","onClose","DialogTitle","id","DialogContent","DialogContentText","autoFocus","margin","defaultValue","onChange","DialogActions","onClick","CommentDialog","openComment","comment","handleCloseComment","onUpdateCommentItem","handleChangeCommentText","comm","Typography","key","isValidUserId","onRemovePostItem","anchorEl","handleClickOpenEdit","handleClickOpenComment","handleClose","Menu","Boolean","MenuItem","ListItemIcon","fontSize","EditDialog","root","width","backgroundColor","palette","background","chip","headersection","tweet","useState","direction","Paper","xs","Avatar","style","postedBy","lastname","charAt","firstname","gutterBottom","moment","created","fromNow","comments","cursor","aria-describedby","imageUrlRe","forwardRef","ref","Slide","MyTruncate","str","substring","card","marginBottom","transitionDuration","cardMedia","paddingTop","content","link","textDecoration","primary","dark","divider","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","onRemovePost","onUpdatePost","onUpdateComment","loginUserId","posterId","posterFirstName","posterLastName","posterBackGroundColor","email","avatarName","fullName","image","match","url","setOpen","setOpenEdit","setOpenComment","inputEditText","setEditInputText","inputCommentText","setCommentInputText","expanded","setExpanded","setAnchorEl","useTheme","name","target","credential","postId","Card","elevation","CardMedia","title","CardHeader","light","avatar","subheader","CardContent","paragraph","noWrap","CardActions","disableSpacing","IconButton","aria-haspopup","aria-owns","clsx","currentTarget","aria-expanded","aria-label","answer","window","confirm","ViewDialog","handleResponse","response","then","JSON","parse","ok","status","statusText","Promise","reject","commentUpdate","getState","fetch","method","headers","Accept","stringify","commentOptions","catch","err","Home","componentDidUpdate","removePost","updatePost","createPost","filterGeneralUser","tweetsPost","sort","a","b","Date","reverse","filter","filterAdminlUser","isLogin","isDeleted","firebaseToken","getPosts","tweetsError","to","pathname","generaluserposts","Fragment","md","paper_input","paper_post","lg","flexGrow","control","firebaseAuth","firebase","post","createPostOptions","removePostOptions","updatePostOptions","getPostsOptions","posts","ButtonAppBar","handleDrawerOpen","setState","handleDrawerClose","handleSignOut","signOut","handleProfile","getUser","menuItem","List","ListItem","ListItemText","button","component","Link","Divider","isAuthenticated","redirectToProfile","CssBaseline","AppBar","position","appBar","appBarShift","Toolbar","edge","menuButton","hide","Drawer","drawer","anchor","drawerPaper","drawerHeader","contentShift","display","easing","sharp","leavingScreen","easeOut","enteringScreen","marginRight","flexShrink","alignItems","mixins","toolbar","justifyContent","requestOptions","resetPassword","newPassword","newpassword","getFirebase","firebase_user","currentUser","updatePassword","saveJWTStore","store","stringifiedStore","localStorage","setItem","removeJWTStore","removeItem","updateUser","updateUserOptions","userData","removeUser","removeUserOptions","requestUserOptions","SignIn","handleChange","hanldeSubmit","password","signIn","authentication","loginForm","Face","sm","label","Fingerprint","FormControlLabel","Checkbox","disableFocusRipple","disableRipple","textTransform","emailVerified","Container","flexDirection","formControl","minWidth","selectEmpty","newUser","signInWithEmailAndPassword","firebase_logined_user","uid","getIdToken","idToken","message","getFirebaseToken","IdToken","SinUp","signUp","Https","FormControl","InputLabel","Select","labelId","FormHelperText","nickname","password2","alert","SignUp","DeleteUser","deleteConfirmed","userError","Profile","href","oldUser","ForgetPassword","forgetPassword","sendPasswordResetEmail","ResetPassword","passValidflag","newpassword2","isValidNewPassword","isInValid","EditUser","PrivateRoute","rest","render","getItem","from","location","Root","exact","path","App","hostname","InitState","tweetReducer","action","concat","single_data","loadJWTStore","authReducer","userReducer","rootReducer","combineReducers","firestore","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","fbConfig","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0638a57.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, TextField, Button, Grid, withStyles } from '@material-ui/core';\n\nimport { connect } from 'react-redux';\n\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing.unit * 2,\n        height: 200,\n    },\n    tweetButton: {\n        marginTop: theme.spacing.unit,\n    },\n});\n\nclass TweetInput extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        onSubmit: PropTypes.func,\n    };\n\n    componentDidMount = () => {\n        this.postData = new FormData();\n    }\n\n    static defaultProps = {\n        onSubmit: (v,e) => {\n            console.log(\"TweetInput\",v )\n            //console.log(\"TweetInput event\",e )\n            \n        },\n    };\n\n    input = React.createRef();\n\n    onSubmit = event => {\n        event.preventDefault();\n        const { value } = this.input.current;\n\n        if (!value.trim()) {\n            return;\n        }\n\n        const { data } = this.props;\n        //console.log(\"TweetInput data(onSubmit) -> : \", data)\n\n        this.postData.set(\"title\", \"title\");\n        this.postData.set(\"body\", value);\n\n        console.log(\"TweetInput FormData(onSubmit)\", this.postData.entries() )\n\n        const credentials = {\n            userId: data.user._id,\n            token: data.token,\n            body: this.postData,\n        }\n\n        this.props.onSubmit(credentials, event);\n        this.input.current.value = '';\n\n    };\n\n    render() {\n        const { classes, data } = this.props;\n\n        //console.log(\"TweetInput data -> : \", data)\n\n        return (\n\n            <form onSubmit={this.onSubmit} autoComplete=\"off\">\n                <TextField\n                required\n                fullWidth\n                multiline\n                rows={4}\n                placeholder=\"What's happening?\"\n                inputRef={this.input}\n                />\n                <Grid container justify=\"flex-end\">\n                <Grid item>\n                    <Button disabled={!data}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    className={classes.tweetButton}\n                    >\n                    Post\n                    </Button>\n                </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        authError: state.auth.authError,\n        data : state.auth.data,\n        redirectToReferer: state.auth.redirectToReferer,\n        loading: state.auth.loading,\n        tweets: state.tweets.postData,\n        tweetError: state.tweets.postError,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    }\n}\n\nexport default withStyles(styles)( connect(mapStateToProps, mapDispatchToProps)(TweetInput) );\n","import {\n    red,\n    pink,\n    purple,\n    indigo,\n    blue,\n    teal,\n    green,\n    lightGreen,\n    amber,\n    orange,\n    deepOrange,\n    deepPurple,\n    blueGrey,\n} from '@material-ui/core/colors';\n\nconst colors = [\n    red,\n    pink,\n    purple,\n    indigo,\n    blue,\n    teal,\n    green,\n    lightGreen,\n    amber,\n    orange,\n    deepOrange,\n    deepPurple,\n    blueGrey,\n];\n\nexport default function colorFrom(string) {\n    try {\n\n        //console.log(\"entried color string: \", string);\n\n\n        const index = string\n            .toString()\n            .split('')\n            .map(char => char.charCodeAt())\n            .reduce((sum, num) => sum + num, 0);\n\n        //console.log(\"entried color Index: \", index);\n\n        const colorIndex = index % colors.length;\n\n        //console.log(\"final color Index: \", colorIndex);\n\n        return colors[colorIndex][500];\n    } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n        return blueGrey[500];\n    }\n}\n","import React from 'react';\nimport {Button,TextField, withStyles,} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst EditDiaglog = (props) => {\n\n    const { openEdit, \n            Transition, \n            MenuhandleClose, \n            text, \n            handleCloseEdit, \n            onUpdatePostItem, \n            handleChangeEditText} = props;\n\n    return (\n\n        <Dialog aria-labelledby=\"form-dialog-title\"\n            open={openEdit}\n            TransitionComponent={Transition}\n            keepMounted\n            fullWidth\n            maxWidth={\"md\"}\n            onClose={MenuhandleClose}\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Edit message</DialogTitle>\n            <form>\n            <DialogContent>\n            <DialogContentText>\n                please edit contents and press update button. \n            </DialogContentText>\n            \n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"text\"\n                multiline\n                type=\"text\"\n                fullWidth\n                defaultValue={text || null}\n                onChange={handleChangeEditText(\"text\")}\n            />\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={handleCloseEdit} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={onUpdatePostItem} color=\"primary\">\n                    Update\n                </Button>\n            </DialogActions>\n            </form>\n        </Dialog>            \n    )\n\n}\n\n\nexport default EditDiaglog;\n","import React from 'react';\nimport {Button,TextField, Typography, withStyles,} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst CommentDialog = (props) => {\n\n    const { openComment, \n            Transition, \n            MenuhandleClose, \n            comment, \n            handleCloseComment, \n            onUpdateCommentItem, \n            handleChangeCommentText} = props;\n\n    return (\n\n        <Dialog aria-labelledby=\"form-dialog-title\"\n            open={openComment}\n            TransitionComponent={Transition}\n            keepMounted\n            fullWidth\n            maxWidth={\"md\"}\n            onClose={MenuhandleClose}\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Comment</DialogTitle>\n            <form>\n            <DialogContent>\n            <DialogContentText>\n                please write your comment. \n            </DialogContentText>\n            \n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"comment\"\n                multiline\n                type=\"comment\"\n                fullWidth\n                onChange={handleChangeCommentText(\"comment\")}\n            />\n            </DialogContent>\n\n            { comment ? comment.map(comm =>  \n                (<Typography variant=\"inherit\" key={comm._id}>   \n                    {comm.text}\n                </Typography>) \n                \n            ) : \"\" }\n\n            <DialogActions>\n                <Button onClick={handleCloseComment} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={onUpdateCommentItem} color=\"primary\">\n                    Comment\n                </Button>\n            </DialogActions>\n            </form>\n        </Dialog>            \n    )\n\n}\n\n\nexport default CommentDialog;\n","import React from 'react';\n\nimport { Typography, withStyles} from '@material-ui/core';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\n\nimport EditDialog from './EditDialog';\n\nimport CommentDialog from './CommentDialog';\n\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing.unit * 2,\n    },\n    tweetButton: {\n        marginTop: theme.spacing.unit,\n    },\n});\n\n\nconst  TweetMenu =(props) => {\n\n    const { isValidUserId,\n            open,\n            openComment,\n            onRemovePostItem,\n            onUpdatePostItem,\n            onUpdateCommentItem,\n            anchorEl,\n            MenuhandleClose, \n            handleClickOpenEdit,\n            handleClickOpenComment,\n            Transition, \n            handleClose,\n            text, comment,\n            openEdit, \n            handleCloseEdit,\n            handleCloseComment,\n            handleChangeEditText,\n            handleChangeCommentText,\n\n                } = props;    \n    \n    return (\n        <div>\n            {isValidUserId ?     \n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={MenuhandleClose}\n                >\n                    <MenuItem onClick={handleClickOpenEdit}>\n                        <ListItemIcon>\n                            <EditIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        <Typography variant=\"inherit\">Edit</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={onRemovePostItem}>\n                        <ListItemIcon>\n                            <DeleteIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        <Typography variant=\"inherit\">Delete</Typography>\n                    </MenuItem>\n                </Menu>\n                        :\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={MenuhandleClose}\n                >\n                <MenuItem onClick={handleClickOpenComment}>\n                    <ListItemIcon>\n                        <CommentIcon fontSize=\"small\" />\n                    </ListItemIcon>\n                    <Typography variant=\"inherit\">Comment</Typography>\n                </MenuItem>\n\n                </Menu>\n            }\n\n            <CommentDialog \n                openComment={openComment} \n                Transition={Transition} \n                MenuhandleClose={MenuhandleClose} \n                comment={comment ? comment : \"\"} \n                handleCloseComment={handleCloseComment} \n                onUpdateCommentItem={onUpdateCommentItem}\n                handleChangeCommentText={handleChangeCommentText}\n             />\n\n\n\n            <EditDialog \n                openEdit={openEdit} \n                Transition={Transition} \n                MenuhandleClose={MenuhandleClose} \n                text={text} \n                handleCloseEdit={handleCloseEdit} \n                onUpdatePostItem={onUpdatePostItem}\n                handleChangeEditText={handleChangeEditText}\n             />\n        </div>\n    );\n}\n\nexport default withStyles(styles)(TweetMenu);","import React, {useState} from 'react';\nimport {Button, Avatar,  Card, withStyles,} from '@material-ui/core';\n\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport colorFrom from '../utils/colors';\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\nimport moment from 'moment';\n\nimport Paper from '@material-ui/core/Paper';\n\n\nconst styles = theme => ({\n\n    root: {\n        width: '100%',\n        //maxWidth: 500,\n        backgroundColor: theme.palette.background.paper,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    headersection: {\n        margin: theme.spacing(1),\n        width: \"30vm\",\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        //maxWidth: \"md\",\n        width: \"30vm\",\n    },          \n});\n\nconst PostTextDisplay = (props) => {\n\n    const {classes, tweet} = props;\n\n    const [commentsExist, setCommentExists] = useState(false);\n\n    return (\n        <div className={classes.root}>\n        <Grid container direction=\"column\" justify=\"flex-start\">\n            <Paper className={classes.paper}>\n                <Grid container className={classes.headersection}>\n                    <Grid item xs={1}>\n                        <Avatar style={{backgroundColor: colorFrom(tweet.postedBy.backgroundColor),}}  >\n                            {tweet.postedBy.lastname.charAt(0) + tweet.postedBy.firstname.charAt(0)}\n                        </Avatar>\n                    </Grid>\n                    <Grid item xs={11}>\n                        <Typography gutterBottom variant=\"subtitle1\">\n                          posted by {tweet.postedBy.lastname}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            {moment(tweet.created).fromNow()}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                            {tweet.body}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>            \n        </div>\n    )\n\n}\n\n\n\nexport default withStyles(styles)(PostTextDisplay);","import React from 'react';\nimport {Button,TextField, Typography, withStyles,} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n\n    root: {\n        width: '100%',\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n\n        //maxWidth: 500,\n        backgroundColor: theme.palette.background.paper,\n    },\n\n})\n\n\n\nconst CommentTextDialog = (props) => {\n\n    const { classes, handleChangeCommentText } = props;\n\n    //const handleChangeCommentText = () => {\n    //    console.log(\"CommentTextDialog handleChangeCommentText....\")\n    // }\n\n    return (\n\n        <form>\n\n            <Grid container direction=\"column\" justify=\"flex-start\">\n\n                <Grid item className={classes.root}>\n                <Typography variant=\"h5\">\n                    コメントをどうぞ....\n                </Typography>\n                </Grid>\n\n\n                <Grid item className={classes.root}>\n                    <Typography variant=\"inherit\">   \n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"comment\"\n                        multiline\n                        type=\"comment\"\n                        fullWidth\n                        onChange={handleChangeCommentText(\"comment\")}\n                    />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </form>\n    )\n\n\n}\n\nexport default withStyles(styles)(CommentTextDialog);\n\n","import React, {useState} from 'react';\nimport {Button, Avatar,  Card, withStyles,} from '@material-ui/core';\n\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport colorFrom from '../utils/colors';\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\nimport moment from 'moment';\n\nimport Paper from '@material-ui/core/Paper';\n\n\nconst styles = theme => ({\n\n    root: {\n        width: '100%',\n        //maxWidth: 500,\n        backgroundColor: theme.palette.background.paper,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    headersection: {\n        margin: theme.spacing(1),\n        width: \"30vm\",\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        //maxWidth: \"md\",\n        width: \"30vm\",\n    },          \n});\n\nconst CommentDisplay = (props) => {\n\n    const {classes, comments} = props;\n\n    const [commentsExist, setCommentExists] = useState(false);\n\n    return (\n        <div className={classes.root}>\n\n        <Grid container direction=\"column\" justify=\"flex-start\" >\n            {comments ? comments.map(\n                comment => ( \n\n                    <div key={comment._id}>\n                    <Paper className={classes.paper}>\n                        <Grid container className={classes.headersection}>\n                            <Grid item xs={1}>\n                                <Avatar style={{backgroundColor: colorFrom(comment.postedBy.backgroundColor),}}  >\n                                    {comment.postedBy.lastname.charAt(0) + comment.postedBy.firstname.charAt(0)}\n                                </Avatar>\n                            </Grid>\n                            <Grid item xs={11}>\n                                <Typography gutterBottom variant=\"subtitle1\">\n                                    commented by {comment.postedBy.lastname}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {moment(comment.created).fromNow()}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                    {comment.text}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body2\" style={{ cursor: \"pointer\" }}>\n                                Remove\n                            </Typography>\n                        </Grid>\n                    </Paper>\n                    </div>\n                ))\n                :\n                \"\"\n            }\n\n        </Grid>            \n        </div>\n    )\n\n}\n\n\n\nexport default withStyles(styles)(CommentDisplay);","import React from 'react';\nimport {Button, withStyles,} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport PostTextDisplay from './PostTextDisplay';\n\nimport CommentTextDialog from './CommentTextDialog';\n\nimport CommentDisplay from './CommentDisplay';\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing.unit * 2,\n    },\n    tweetButton: {\n        marginTop: theme.spacing.unit,\n    },\n});\n\n\n\n\nconst ViewDiaglog = (props) => {\n\n    const {classes, isValidUserId,  \n            open, \n            Transition, \n            handleClose, \n            tweet, \n            text, \n            comment, \n            handleChangeCommentText,\n            onUpdateCommentItem\n        } = props;\n\n    return (\n        <Dialog\n            open={open}\n            TransitionComponent={Transition}\n            keepMounted\n            fullWidth\n            maxWidth={\"md\"}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Post message</DialogTitle>\n            \n\n            \n            <DialogContent>\n            \n\n                <PostTextDisplay tweet={tweet} />\n                \n                <CommentDisplay comments={comment} />\n\n                {!isValidUserId ? \n                    (<CommentTextDialog \n                        handleChangeCommentText={handleChangeCommentText}\n                        \n                        />)\n                    :\n                    \"\"    \n                }\n            </DialogContent>\n            \n            \n            <DialogActions>\n\n                {!isValidUserId ? (\n                    <Button onClick={onUpdateCommentItem} color=\"primary\">\n                        Update Comment\n                    </Button>\n                    )\n                    :\n                    \"\"\n                }\n                <Button onClick={handleClose} color=\"primary\">\n                    Close\n                </Button>\n            </DialogActions>\n            \n        </Dialog>                \n    )\n\n}\n\n\nexport default withStyles(styles)(ViewDiaglog);\n","import React, { useState} from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport {Card,\n        CardHeader,\n        CardMedia,\n        CardContent,\n        CardActions,\n        Avatar,\n        Divider,\n        Typography,\n        withStyles,} from '@material-ui/core';\n\nimport Slide from '@material-ui/core/Slide';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport clsx from 'clsx';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport Markdown from 'react-markdown';\nimport colorFrom from '../utils/colors';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport MicrolinkCard from '@microlink/react';\n\nimport TweetMenu from './TweetMenu';\nimport ViewDialog from './ViewDialog';\n\n\n\nconst imageUrlRe = /\\b(https?:\\/\\/\\S+(?:png|jpe?g|gif)\\S*)\\b/g;\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n  \n  \nconst styles = theme => ({\n    card: {\n        //flex: 1,\n        marginBottom: theme.spacing.unit * 2,\n        //display: 'block',\n        transitionDuration: '0.5s',\n        //maxHeight: '30vw',\n    },\n    cardMedia: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    content: {\n        //wordWrap: 'break-word',\n        height: '20vw',\n    },\n    link: {\n        textDecoration: 'none',\n        color: theme.palette.primary.dark,\n    },\n    \n    divider: {\n        margin: `${theme.spacing.unit * 3}px`\n    },    \n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n\n});\n\n//\n//MyTweet represents single card containing each post message, which holds created date/user id.\n// \nconst MyTruncate= (props) => {\n\n    const {str} = props;\n    //console.log(\"truncate\", str.length);\n    const strlength = str.length;\n\n    const strtext = strlength > 140 ? str.substring(0,140) + \"....(more)\" : str;\n\n    return strtext\n}\n\nconst MyTweet = (props) => {\n\n    const {classes, tweet, data, onRemovePost, onUpdatePost, onUpdateComment} = props;\n\n    const postedBy = tweet.postedBy;\n    const text = tweet.body;\n    const created = tweet.created;\n    const id = tweet._id;\n    // comment \n    const comment = tweet.comments;\n\n    const loginUserId = data.user._id;\n\n    const posterId = postedBy ? postedBy._id : \"\";\n    const posterFirstName = postedBy ? postedBy.firstname : \"\";\n    const posterLastName = postedBy ? postedBy.lastname : \"\";\n    const posterEmail = postedBy ? postedBy.email : \"\";\n    const posterBackGroundColor = postedBy ? postedBy.backgroundColor : \"\";\n    //const posterCreated = postedBy ? postedBy.created : \"\";\n    \n    const avatarName = posterLastName.charAt(0) + posterFirstName.charAt(0);\n    const fullName = posterLastName + \" \" +  posterFirstName;\n    \n    //console.log(avatarName)\n\n    const image = text.match(imageUrlRe);\n    const urlMatches = text.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n    const LinkPreviews = urlMatches.map(link => <MicrolinkCard url={link} />);\n\n    const [open, setOpen] = useState(false);\n    const [openEdit, setOpenEdit] = useState(false);\n    const [openComment, setOpenComment] = useState(false);\n    \n    const [inputEditText, setEditInputText] = useState(\"\");\n    const [inputCommentText, setCommentInputText] = useState(\"\");\n\n    const [expanded, setExpanded ]  = useState(false);\n    const [anchorEl, setAnchorEl ] = useState(null);\n\n    const theme = useTheme();\n\n    const isValidUserId = ( loginUserId ===  posterId );\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleClickOpenEdit = () => {\n        setOpenEdit(true);\n    };\n    \n    const handleCloseEdit = () => {\n        setOpenEdit(false);\n        MenuhandleClose()\n    };\n\n    const handleClickOpenComment = () => {\n        setOpenComment(true);\n    };\n    \n    const handleCloseComment = () => {\n        setOpenComment(false);\n        MenuhandleClose()\n    };\n\n    const MenuhandleClick = (e) => { // 引数追加\n        \n        setAnchorEl(e.currentTarget);\n        setExpanded(!expanded);\n        //console.log(\"MenuhandleClick:\", anchorEl, expanded )\n    };\n\n    const MenuhandleClose = () => {\n        setAnchorEl(null);\n    }; \n\n    const handleChangeEditText = name => event => {\n        setEditInputText(event.target.value);\n        console.log(\"TweetMain handleChange text\", inputEditText);\n    };    \n\n    const handleChangeCommentText = name => event => {\n        setCommentInputText(event.target.value);\n        console.log(\"TweetMain handleChange (comment)\", inputCommentText);\n    };    \n\n    const onUpdateCommentItem = () => {\n\n        //const postData = new FormData();\n\n        //postData.set(\"title\", \"title\");\n        //postData.set(\"body\", inputEditText);\n    \n        console.log(\"MyTweet updatePost -> \", inputEditText)\n        const credential = {\n            userId: loginUserId,\n            postId: id,\n            comment: inputCommentText,\n            token: data.token,\n        }\n\n        setAnchorEl(null);\n        handleCloseComment();\n\n        onUpdateComment(credential);\n\n        setEditInputText(\"\");\n    }\n\n    const onUpdatePostItem = () => {\n\n        const postData = new FormData();\n\n        postData.set(\"title\", \"title\");\n        postData.set(\"body\", inputEditText);\n    \n        console.log(\"MyTweet updatePost -> \", inputEditText)\n        const credential = {\n            postId: id,\n            body: postData,\n            token: data.token,\n        }\n\n        setAnchorEl(null);\n        handleCloseEdit();\n\n        onUpdatePost(credential);\n\n    }\n\n    const onRemovePostItem = () => {\n\n        const credential = {\n            postId: id,\n            token: data.token,\n        }\n\n        let answer = window.confirm(\"Are you seriously sure you want to delete your message ?\")\n\n        setAnchorEl(null);\n\n        if (answer) {\n            onRemovePost(credential);\n        }\n\n    }\n    \n    return (\n\n        <Card key={id}\n            className={classes.card}\n            elevation={8}\n            >    \n\n            {image && (\n                <CardMedia\n                className={classes.cardMedia}\n                image={image[0]}\n                title=\"An tweet's image\"\n                />\n            )}\n\n            <CardHeader style={{backgroundColor: theme.palette.primary.light,}}\n            avatar={\n                <Avatar\n                style={{\n                    backgroundColor: colorFrom(posterBackGroundColor),\n                }}\n                >\n                {avatarName}\n                </Avatar>\n            }\n            title={fullName}\n            subheader={\n                moment(created).fromNow()\n                \n            }\n            />\n\n            <CardContent className={classes.content}  onClick={handleClickOpen}   >\n                <Typography paragraph noWrap={false}>\n                <MyTruncate str={text} />\n                </Typography>\n            </CardContent>\n\n            <CardActions disableSpacing>\n                <IconButton\n                    aria-haspopup=\"true\"\n                    aria-owns={anchorEl ? \"simple-menu\" : null}\n                    className={clsx(classes.expand, {\n                        [classes.expandOpen]: expanded,\n                    })}\n                    onClick={ MenuhandleClick }\n                    aria-expanded={expanded}\n                    aria-label=\"show more\"\n                    >\n                    <ExpandMoreIcon />\n                </IconButton>\n            </CardActions>\n\n            <TweetMenu isValidUserId = {isValidUserId}\n                        open={open} \n                        openComment={openComment}\n                        onRemovePostItem={onRemovePostItem} \n                        onUpdatePostItem={onUpdatePostItem}\n                        onUpdateCommentItem={onUpdateCommentItem}\n                        anchorEl = {anchorEl}\n                        MenuhandleClose={MenuhandleClose} \n                        handleClickOpenEdit={handleClickOpenEdit}\n                        handleClickOpenComment={handleClickOpenComment}\n                        Transition={Transition} \n                        handleClose={handleClose}\n                        text={text}\n                        comment={comment}\n                        openEdit={openEdit} \n                        handleCloseEdit={handleCloseEdit} \n                        handleCloseComment={handleCloseComment}\n                        handleChangeCommentText={handleChangeCommentText}\n                        handleChangeEditText={handleChangeEditText}\n                    />\n\n            <ViewDialog\n                isValidUserId = {isValidUserId}\n                open={open} \n                tweet={tweet}\n                Transition={Transition} \n                handleClose={handleClose} \n                text={text} \n                comment={comment}\n                handleChangeCommentText={handleChangeCommentText}\n                onUpdateCommentItem={onUpdateCommentItem}\n\n            />\n\n\n        </Card>\n\n    )\n    \n    \n\n}\n\nexport default withStyles(styles)(MyTweet);;\n","import moment from 'moment';\nimport { v4 as uuid } from 'uuid';\n\nconst createPostHost = 'http://localhost:5000/post/new/';\nconst removePostHost = 'http://localhost:5000/post/';\n//const updatePostHost = 'http://localhost:5000/post/';\nconst findUpdatePostHost = 'http://localhost:5000/post/update/';\n\nconst commentHost = \"http://localhost:5000/post/comment/update\";\n\n\nconst getPostsHost = \"http://localhost:5000/posts\"\n\n\nconst handleResponse = (response ) => {\n\n    return response.text()\n    .then( (text) => {\n\n\n        const data = text && JSON.parse(text);\n\n        console.log(\"handleResponse response text --> \",data)\n\n        if (!response.ok) {\n            if (response.status !== 200) {\n                console.log(\"handleResponse\", response)\n            }\n            const error = (data && (data.error || data.statusText) );\n            console.log(\"error from handleResponse\", error)\n            return Promise.reject(error)\n        }\n        return data;\n    })\n\n};\n\nconst removePostOptions = (token) => {\n    return ({\n    method: 'DELETE',\n    headers: { \n        Accept: 'application/json',\n        'Content-Type': 'application/json' ,\n        'Authorization' : `Bearer ${token}` },\n    })\n    \n};\n\nconst createPostOptions = (token, body) => {\n    return ({\n    method: 'POST',\n    headers: { \n        Accept: 'application/json',\n        'Authorization' : `Bearer ${token}` },\n    body: body\n    })\n    \n};\n\nconst updatePostOptions = (token, body) => {\n    return ({\n    method: 'PUT',\n    headers: { \n        Accept: 'application/json',\n        'Authorization' : `Bearer ${token}` },\n    body: body\n    })\n    \n};\n\n\nconst getPostsOptions = (token, userId) => {\n\n    return ({\n    method: 'GET',\n    headers: { \n        Accept: 'application/json',\n        'Content-Type': 'application/json' ,\n        'Authorization' : `Bearer ${token}` },\n    //body: JSON.stringify({ userId })\n    })\n};\n\nconst commentOptions = (token, userId, postId, comment) => {\n    return ({\n    method: 'PUT',\n    headers: { \n        Accept: 'application/json',\n        'Content-Type': 'application/json' ,\n        'Authorization' : `Bearer ${token}` },\n    body: JSON.stringify({userId, postId, comment})\n    })\n};\n\n\nexport const createPost = (credentials) => {\n\n    const userId = credentials.userId;\n    const token = credentials.token;\n    const body = credentials.body\n\n    console.log(\"createPost(tweetActions) body -> \", body)\n\n    return (dispatch, getState) => {\n\n        fetch(createPostHost + userId, createPostOptions(token, body))\n        .then(handleResponse)\n        .then( (data) => {\n            console.log(\"createPost (tweetActions) \", data)\n            dispatch({ type: \"POST_SUCCESS\",   data  })\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'POST_ERROR', err });\n        })\n    }\n}\n\nexport const updatePost = (credentials) => {\n\n    const postId = credentials.postId;\n    const token = credentials.token;\n    const body = credentials.body;\n\n    console.log(\"updatePost(tweetActions) body -> \", body);\n\n    return (dispatch, getState) => {\n\n        fetch(findUpdatePostHost + postId, updatePostOptions(token, body))\n        .then(handleResponse)\n        .then( (data) => {\n            console.log(\"updatePost (tweetActions) \", data)\n            dispatch({ type: \"UPDATEPOST_SUCCESS\",   data  })\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'UPDATEPOST_ERROR', err });\n        })\n    }\n}\n\nexport const getPosts = (credentials) => {\n\n    const userId = credentials.userId;\n    const token = credentials.token;\n\n    return (dispatch, getState) => {\n\n        fetch(getPostsHost, getPostsOptions(token, userId))\n        .then(handleResponse)\n        .then( (data) => {\n            console.log(\"getPosts (tweetActions) \", data.posts)\n            dispatch({ type: \"GETPOST_SUCCESS\",  data:  data.posts  })\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'GETPOST_ERROR', err });\n        })\n    }\n}\n\n\nexport const removePost = (credentials) => {\n\n    const postId = credentials.postId;\n    const token = credentials.token;\n    \n    //console.log(\"removePost(tweetActions) -> \")\n\n    return (dispatch, getState) => {\n\n        fetch(removePostHost + postId, removePostOptions(token))\n        .then(handleResponse)\n        .then( (data) => {\n            console.log(\"removePost (tweetActions) \", data)\n            dispatch({ type: \"REMOVEPOST_SUCCESS\",   data  })\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'REMOVEPOST_ERROR', err });\n        })\n    }\n}\n\nexport const commentUpdate = (credentials) => {\n\n    const userId = credentials.userId;\n    const postId = credentials.postId;\n    const token = credentials.token;\n    const comment = credentials.comment;\n\n\n    const data = {\n        userId, postId, comment\n    }\n\n    console.log(\"comment(tweetActions) comment data to be submit. -> \", data);\n\n    return (dispatch, getState) => {\n\n        fetch(commentHost, commentOptions(token, userId, postId, {text: comment }) )\n        .then(handleResponse)\n        .then( (data) => {\n            console.log(\"comment (tweetActions) \", data)\n            dispatch({ type: \"COMMENT_SUCCESS\",   data  })\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'COMMENT_ERROR', err });\n        })\n    }\n\n\n}\n\n\n","import React, { Component } from 'react';\n\nimport TweetInput from './TweetInput';\nimport MyTweet from './TweetMain';\nimport {  withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { createPost, getPosts, removePost, updatePost, commentUpdate } from '../store/actions/tweetActions';\nimport { Grid, Paper } from '@material-ui/core';\n\nimport { Redirect } from \"react-router-dom\";\n\n\nconst styles = (theme) =>  ( {\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 200,\n        //width: 100,\n      },\n\n    paper_input: {\n        height: 200,\n        margin: theme.spacing.unit *0.2,\n        //width: 100,\n    },\n\n      paper_post: {\n        //height: 200,\n        width: \"100%\",\n        //padding: theme.spacing.unit,\n        margin: theme.spacing.unit *0.2,        \n      },\n\n      \n      control: {\n        padding: theme.spacing(2),\n      },\n  \n})\n\nclass Home extends Component {\n\n    constructor(props) {\n        super();\n        console.log(\"Home constructor props\", props);\n\n        const data = props.data;\n\n        this.state = {\n            isLogin:false,\n            isDeleted: false,\n            token: data ? data.token : \"\",\n            userId: data ? data.user._id : \"\",\n            email:data ? data.user.email : \"\" , \n        }\n\n        const credentials = {\n            token: data ? data.token : \"\",\n            userId: data ? data.user._id : \"\",\n            email:data ? data.user.email : \"\" ,             \n        }\n\n        const firebaseToken = props.firebaseToken;\n        console.log(\"Home : firebaseToken --> \", credentials.token)\n\n        if (props.data) {\n            props.getPosts(  credentials );\n        }\n\n    }\n\n    componentDidMount = () => {\n        console.log(\"Home componentDidMount() \");\n\n    }\n\n    componentDidUpdate = () => {        \n        console.log(\"Home componentDidUpdate() call getPosts.\");\n    }\n\n    onRemovePost = (credential) => {\n        const { removePost } = this.props;\n        console.log(\"Home removePost (onSubmit):\", credential);\n        removePost(credential);\n\n        //this.setState({\n        //    isDeleted: true,\n        //})\n    }\n\n    onUpdatePost = (credential) => {\n\n        const { updatePost } = this.props;\n\n        const { body } = credential;\n        console.log(\"Home updatePost (onSubmit):\", credential);\n\n        console.log(\"* Home updatePost (onSubmit) postData:\", body)\n\n        updatePost(credential);\n\n    }\n\n    onUpdateComment = (credential) => {\n\n        const { commentUpdate } = this.props;\n\n        //const { body } = credential;\n        console.log(\"Home updateComment (onSubmit):\", credential);\n        commentUpdate(credential);\n    }\n\n\n    onSubmit = text => {\n\n        const { createPost } = this.props;\n        //console.log(this.props)\n        console.log(\"Home post message (onSubmit):\", text)\n        //createTweet({ userId:\"user123\", text });\n        createPost(text);\n    \n    };\n    \n    filterGeneralUser = () => {\n\n        const {tweetsPost} = this.props;\n\n        //console.log(tweetsPost)\n        tweetsPost.sort((a, b) => {\n            let dateA = new Date(a.created),\n              dateB = new Date(b.created);\n            return dateA - dateB;\n          })\n          .reverse();\n\n        var rebels = tweetsPost.filter( (tweet) => {\n            return tweet.postedBy.email !== \"rmhmn777@gmail.com\";\n        });   \n        return rebels;     \n\n    }\n\n    filterAdminlUser = () => {\n\n        const {tweetsPost} = this.props;\n\n        //console.log(tweetsPost)\n        tweetsPost.sort((a, b) => {\n            let dateA = new Date(a.created),\n              dateB = new Date(b.created);\n            return dateA - dateB;\n          })\n          .reverse();\n          \n\n        var rebels = tweetsPost.filter( (tweet) => {\n            return tweet.postedBy.email === \"rmhmn777@gmail.com\";\n        });   \n        return rebels;     \n\n    }\n\n\n    render () {\n        \n        const { classes, data , tweetsPost, tweetsError } = this.props;\n        console.log(\"Home all tweets posted (consolidated after posting)\", tweetsPost)\n        console.log(\"Home tweetError (render) : \", tweetsError)\n\n        if (!data) {\n            return <Redirect to={{pathname: \"/signin\" }} />\n        }\n\n        if (this.state.isDeleted && !tweetsError) {\n            console.log(\"isDeleted:true non tweetError.\")\n            //return <Redirect to={ \"/\" } />\n        }\n\n        if (tweetsPost) {\n\n            console.log(\"Home posted tweets\", tweetsPost)\n            //const tweets = tweets.posts;\n            const generaluserposts = this.filterGeneralUser();\n            const adminuserposts = this.filterAdminlUser();\n            \n            console.log(\"*** Home generaluserposts --> \", generaluserposts)\n\n\n            return (\n                <React.Fragment>\n                    <Grid container>\n\n\n                        <Grid item xs={6} md={10}>\n\n                            <Paper className={classes.paper_input}>         \n                                <TweetInput onSubmit={this.onSubmit} />\n                            </Paper>\n                            <Paper className={classes.paper_post}>                        \n                                <Grid container direction=\"row\">\n                                    {this.filterGeneralUser().map(tweet => (\n                                    <Grid item={true} xs={12} md={3} lg={3} key={tweet._id}>\n                                        { tweet && ( <MyTweet tweet={tweet} data={data} \n                                            onRemovePost={this.onRemovePost} \n                                            onUpdatePost={this.onUpdatePost}\n                                            onUpdateComment={this.onUpdateComment}\n                                            key={tweet.id} /> ) }\n                                    </Grid>\n                                    ))}\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                        \n                        \n                        <Grid item xs={6} md={2}>\n                            <Paper className={classes.paper_input}>\n                            \n                            </Paper>\n                            <Paper className={classes.paper_post}>                        \n                            {this.filterAdminlUser().map(tweet => (\n                                    <Grid item={true} xs={12} md={12} lg={12} key={tweet._id}>\n                                        { tweet && ( <MyTweet tweet={tweet} data={data} \n                                            onRemovePost={this.onRemovePost} \n                                            onUpdatePost={this.onUpdatePost}\n                                            onUpdateComment={this.onUpdateComment}\n                                            key={tweet.id} /> ) }\n                                    </Grid>\n                                    ))}\n                            \n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </React.Fragment>\n            )\n        }\n        else {\n            return (\n                <div>loading....</div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = state => (\n    {\n        //tweets: state.tweets.data,\n        tweetsPost: state.tweets.postData,\n        tweetsError: state.tweets.postError,\n        firebaseAuth: state.firebase.auth,\n        firebaseToken: state.auth.firebaseToken,         \n        data : state.auth.data,\n\n    }\n);\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        createPost: (post) => dispatch( createPost(post) ) ,\n        removePost: (post) => dispatch( removePost(post) ) ,\n        updatePost: (post) => dispatch( updatePost(post) ) ,\n        getPosts: (token) => dispatch( getPosts(token) ),\n        commentUpdate: (post) => dispatch( commentUpdate(post) ),\n    }\n}\n\n\nexport default  withStyles(styles)(  connect(mapStateToProps, mapDispatchToProps)  (Home) );","import React, {Component} from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport clsx from 'clsx';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\n//import PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\n//import ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport Home from '../components/Home';\n\n\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nconst drawerWidth = 240;\n\n    const styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n});\n\n\n\n\n  \nclass ButtonAppBar extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open : false,\n            isAuthenticated: false,\n        }\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({\n            open: true\n        })\n      };\n    \n    handleDrawerClose = () => {\n        this.setState({\n            open: false\n        })\n    };\n\n    handleSignOut =() => {\n\n        this.props.signOut();\n        this.setState({\n            open: false\n        })\n        //return <Redirect  to=\"/\"   />\n    }\n    \n    handleProfile =() => {\n\n        //console.log(\"edit profile: token\",this.props.data.token)\n        //console.log(\"edit profile: userId\",this.props.data.user._id )\n\n        const credential = {\n            token: this.props.data.token, \n            userId: this.props.data.user._id\n        }\n        this.props.getUser(credential);\n        this.setState({\n            open: false\n        })\n        //return <Redirect  to=\"/\"   />\n    }\n\n\n\n    menuItem = () => {\n\n        const data = this.props.data;\n\n        if (!data) {\n            return (\n                <div>\n                    <List>\n                        <ListItem button  component={Link} to=\"/signin\" >\n                        <ListItemIcon>< PersonIcon /></ListItemIcon>\n                        <ListItemText primary=\"Login\" />\n                        </ListItem>\n                    </List>                \n                </div> \n    \n            )\n        }\n        else {\n            return (\n                <div>\n                    <List>\n                        <ListItem  >\n                        <ListItemIcon>< PersonIcon /></ListItemIcon>\n                        <ListItemText primary={data.user.email} />\n                        </ListItem>\n                    </List>    \n                    <List>\n                        <ListItem button  onClick={ this.handleProfile  } >\n                        <ListItemIcon>< PersonIcon /></ListItemIcon>\n                        <ListItemText primary=\"edit profile\" />\n                        </ListItem>\n                    </List>    \n                    <List>\n                        <ListItem button component={Link} to=\"/reset-password\" >\n                        <ListItemIcon><VpnKeyIcon/></ListItemIcon>\n                        <ListItemText primary=\"Change password\" />\n                        </ListItem>\n                    </List>    \n\n                    <Divider />            \n                    <List>\n                        <ListItem button  onClick={ this.handleSignOut  } >\n                        <ListItemIcon>< ExitToAppIcon /></ListItemIcon>\n                        <ListItemText primary=\"Logout\" />\n                        </ListItem>\n                    </List>    \n    \n                </div>\n            )\n        }\n    }\n    \n\n\n    \n    render () {\n\n        const {classes, redirectToProfile, user} = this.props;\n        const { open } = this.state;\n\n\n        //console.log(\"ButtonAppBar:\",this.props)\n        console.log(\"ButtonAppBar redirect profile -> : \", redirectToProfile )\n        if (user && redirectToProfile) {\n            const userId = user._id;\n            //console.log(\"User ID:\",userId)\n            \n            return <Redirect to={{pathname: `/user/${userId}`}} {...user}   />\n        }\n\n        return   (\n            <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={this.handleDrawerOpen}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, open && classes.hide)}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap>\n                    Company Board\n                </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                <IconButton onClick={this.handleDrawerClose}>\n                    <ChevronLeftIcon /> \n                </IconButton>\n                </div>\n                <Divider />\n                    Image\n                <Divider />\n\n                    { this.menuItem()  }\n                \n                <Divider />\n            </Drawer>\n                <main\n                    className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader} />\n\n                    <Home />\n\n                </main>\n            </div>\n        )}\n}\n\nexport default  withStyles(styles)( ButtonAppBar );","\nconst signupHost = 'http://localhost:5000/signup';\nconst signinHost = 'http://localhost:5000/signin';\nconst signoutHost = 'http://localhost:5000/signout';\nconst readuserHost = 'http://localhost:5000/user/';\nconst resetPasswordHost = 'http://localhost:5000/reset-password/';\n\n\nconst requestUserOptions = (token) => {\n    return ({\n    method: 'GET',\n    headers: { \n        Accept: 'application/json',\n        'Content-Type': 'application/json' ,\n        'Authorization' : `Bearer ${token}` }\n    })\n};\n\nconst handleResponse = (response ) => {\n\n    //console.log(\"handleResponse\", response)    \n    return response.text()\n    .then( (text) => {\n        const data = text && JSON.parse(text);\n\n        \n        if (!response.ok) {\n            if (response.status !== 200) {\n                console.log(\"handleResponse\", response)\n            }\n            const error = (data && ( data.error || data.statusText ));\n            console.log(\"error from handleResponse\", error)\n            return Promise.reject(error)\n        }\n\n        return data;\n    })\n\n};\n\nconst requestPutOptions = (data) => {\n    return ({\n    method: 'PUT',\n    headers: { \n        Accept: 'application/json',\n        'Content-Type': 'application/json' },\n    body: JSON.stringify(data)\n    })\n};\n\nconst requestOptions = (user) => {\n    return ({\n    method: 'POST',\n    headers: { \n        Accept: 'application/json',\n        'Content-Type': 'application/json' },\n    body: JSON.stringify(user)\n    })\n};\n\nconst requestGetOptions = () => {\n    return ({\n        method: 'GET',\n    })\n};\n\n\nexport const signUp = (credentials) => {\n\n    const email = credentials.email;\n    const password = credentials.password;\n    const firstname = credentials.firstname\n    const lastname = credentials.lastname;\n    const backgroundColor = credentials.backgroundColor;\n\n    const user = {\n        firstname, lastname, email, password, backgroundColor\n    }\n\n\n\n    return (dispatch , getState,  getFirebase  ) => {\n\n        fetch(signupHost, requestOptions(user))\n        .then(handleResponse)\n        .then( (data) => {\n            //console.log(\"message (authActions) \", data)\n            dispatch({ type: \"SIGNUP_SUCCESS\" })\n            alert(\"確認のメッセージをあなたのEmailボックスに送りました。確認お願いいたします。\")\n\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'SIGNUP_ERROR', err });\n        })\n    }\n}\n\nexport const getFirebaseToken = () => {\n\n    return (dispatch , getState,  getFirebase  ) => {\n\n        const firebase = getFirebase();\n\n        firebase.auth().currentUser.getIdToken(\n            /**/true \n        )\n        .then( (IdToken) => {\n            console.log(\"get Firebase Token\", IdToken)\n            dispatch({ type: \"FIREBASETOKEN_SUCCESS\"  , \n                        firebaseToken: IdToken, \n            })\n        })\n        .catch( (err) => {\n            console.log(\"getting firebase token error\", err)            \n            dispatch( { type: 'FIREBASETOKEN_ERROR', err });\n        })\n    \n    }\n}\n\nexport const signIn = (credentials) => {\n\n    const email = credentials.email;\n    const password = credentials.password;\n\n\n\n    //return (dispatch, getState) => {\n    return (dispatch , getState,  getFirebase  ) => {\n\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            email,\n            password\n        )\n        .then( () => {\n\n            //console.log(\"signin firebase. Auth data --> : \",firebase.auth()  )\n            const  firebase_logined_user = firebase.auth().currentUser;\n            console.log(\"signIn firebase current user (authActions)\",firebase_logined_user.uid)\n\n            firebase.auth().currentUser.getIdToken(\n                /**/true \n            )\n            .then( (idToken) => {\n                console.log(\"get Firebase Token\", idToken)\n\n                const user = {\n                    email, \n                    password, \n                    idToken,\n                    uid: firebase_logined_user.uid, \n                }\n            \n                fetch(signinHost, requestOptions(user))\n                .then(handleResponse)\n                .then( (data) => {\n                    //console.log(\" signin (authActions) \", data)\n                    dispatch({ type: \"SIGNIN_SUCCESS\"  , \n                                data: data,   // data.token come from firebase_auth of mongo backend process.\n                                firebaseToken: idToken, \n                    })\n                })\n                .catch( (err) => {\n                    console.log(\"signin error\", err)            \n                    dispatch( { type: 'SIGNIN_ERROR', err: err.message });\n                })\n            })\n        })\n        .catch( (err) => {\n            const message = err.message\n            console.log(\"sign in error from firebase.\", err.message)\n            dispatch( { type: 'SIGNIN_ERROR' , err: message } );\n        })\n    \n\n    }\n\n}\n\n\nexport const signOut = () => {\n\n    //return (dispatch, getState) => {\n    return (dispatch , getState,  getFirebase  ) => {\n\n\n        const firebase = getFirebase();\n\n        firebase.auth().signOut()\n        .then( () => {\n            console.log(\"SignOut success with firebase function. \")\n            }\n        )\n\n        fetch(signoutHost, requestGetOptions())\n        .then(handleResponse)\n        .then( (data) => {\n            //console.log(\" signin (authActions) \", data)\n            dispatch({ type: \"SIGNOUT_SUCCESS\"   }   )\n        })\n        .catch( (err) => {\n            console.log(\"signin error\", err)            \n            dispatch( { type: 'SIGNOUT_ERROR', err });\n        })\n    }\n\n\n}\n\nexport const getUser = (credentials) => {\n\n    const userId = credentials.userId;\n    const token = credentials.token;\n\n    return (dispatch, getState) => {\n\n        fetch(readuserHost + userId, requestUserOptions(token))\n        .then(handleResponse)\n        .then( (data) => {\n            console.log(\"message (authActions) \", data)\n            dispatch({ type: \"READUSER_SUCCESS\" })\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'READUSER_ERROR', err });\n        })\n    }\n}\n\n\nexport const forgetPassword = (newUser) => {\n\n    return (dispatch , getState,  getFirebase  ) => {\n\n        const firebase = getFirebase();\n\n        firebase.auth().sendPasswordResetEmail(newUser.email)\n        .then( () => {\n            console.log(\"forgetPassword (authActions) successed.\")\n            dispatch( { type: 'FOREGETPASSWORD_SUCCESS' } )\n        })\n        .catch( (err) => {\n            dispatch( { type: 'FOREGETPASSWORD_ERROR', err: err.message });\n        })\n\n        \n    }\n}\n\n\n\nexport const resetPassword = (credentials) => {\n\n    //const email = credentials.email;\n    const user = {\n        email: credentials.email,\n        newPassword: credentials.newpassword\n    }\n\n\n    return (dispatch , getState,  getFirebase  ) => {\n    //return (dispatch, getState) => {\n\n        const firebase = getFirebase();\n        const firebase_user = firebase.auth().currentUser;\n\n        console.log(\"** resetPassword authActions:\", firebase_user)\n        //var newPassword = getASecureRandomPassword();\n        firebase_user.updatePassword(user.newPassword)\n        .then( () => {\n\n\n            fetch(resetPasswordHost, requestPutOptions(user))\n            .then(handleResponse)\n            .then( (data) => {\n                //console.log(\" signin (authActions) \", data)\n                // Update successful.\n                dispatch({ type: \"RESETPASS_SUCCESS\"  , data   }   )\n            })\n            .catch( (err) => {\n                console.log(\"resetPassword error\", err)            \n                dispatch( { type: 'RESETPASS_ERROR', err });\n            })\n\n        })\n        .catch((err) =>  {\n            // An error happened.\n            console.log(\"resetPassword error\", err)            \n            dispatch( { type: 'RESETPASS_ERROR', err });\n\n        });\n          \n        \n\n\n    }\n\n}\n","export function loadStore() {\n  try {\n    const state = localStorage.getItem('store');\n    return JSON.parse(state);\n  } catch (error) {\n    return undefined;\n  }\n}\n\nexport function saveStore(store) {\n  try {\n    const stringifiedStore = JSON.stringify(store);\n    localStorage.setItem('store', stringifiedStore);\n  } catch (error) {\n    // noop\n  }\n}\n\nexport function saveJWTStore(store) {\n    try {\n        const stringifiedStore = JSON.stringify(store);\n        localStorage.setItem('jwt', stringifiedStore);\n    } catch (error) {\n        // noop\n    }\n}\n\n\nexport function loadJWTStore() {\n    try {\n        const state = localStorage.getItem('jwt');\n        return JSON.parse(state);\n    } \n    catch (error) {\n        return undefined;\n    }\n}\n\nexport function removeJWTStore() {\n    try {\n        const state = localStorage.removeItem('jwt');\n        return JSON.parse(state);\n    } \n    catch (error) {\n        return undefined;\n    }\n}","\n\n//import moment from 'moment';\n//import { v4 as uuid } from 'uuid';\nimport { removeJWTStore } from '../../utils/storage';\n\nconst readuserHost = 'http://localhost:5000/user/';\n\n\nconst requestUserOptions = (token) => {\n    return ({\n    method: 'GET',\n    headers: { \n        Accept: 'application/json',\n        'Content-Type': 'application/json' ,\n        'Authorization' : `Bearer ${token}` }\n    })\n};\n\nconst updateUserOptions = (token, user) => {\n    return ({\n    method: 'PUT',\n    headers: { \n        Accept: 'application/json',\n        'Content-Type': 'application/json' ,\n        'Authorization' : `Bearer ${token}` },\n    body: JSON.stringify(user)\n    })\n    \n};\n\nconst removeUserOptions = (token) => {\n    return ({\n    method: 'DELETE',\n    headers: { \n        Accept: 'application/json',\n        'Content-Type': 'application/json' ,\n        'Authorization' : `Bearer ${token}` },\n    })\n    \n};\n\n\nconst handleResponse = (response ) => {\n\n\n    //console.log(\"handleResponse\", response)    \n\n    return response.text()\n    .then( (text) => {\n        const data = text && JSON.parse(text);\n\n        \n        if (!response.ok) {\n            if (response.status !== 200) {\n                console.log(\"handleResponse\", response)\n            }\n            const error = (data && (data.error || data.statusText) );\n            console.log(\"error from handleResponse\", error)\n            return Promise.reject(error)\n        }\n\n        return data;\n    })\n\n};\n\n\nexport const getUser = (credentials) => {\n\n    const userId = credentials.userId;\n    const token = credentials.token;\n\n    return (dispatch, getState) => {\n\n        fetch(readuserHost + userId, requestUserOptions(token))\n        .then(handleResponse)\n        .then( (userData) => {\n            //console.log(\"message (authActions) \", userData)\n            dispatch({ type: \"GETUSER_SUCCESS\", userData })\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'GETUSER_ERROR', err });\n        })\n    }\n}\n\nexport const updateUser = (credentials) => {\n\n    const userId = credentials.userId;\n    const token = credentials.token;\n\n    return (dispatch, getState) => {\n\n        fetch(readuserHost + userId, updateUserOptions(token, credentials))\n        .then(handleResponse)\n        .then( (userData) => {\n            //console.log(\"message (authActions) \", userData)\n            dispatch({ type: \"UPDATEUSER_SUCCESS\", userData })\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'UPDATESER_ERROR', err });\n        })\n    }\n}\n\nexport const removeUser = (credentials) => {\n\n    const userId = credentials.userId;\n    const token = credentials.token;\n\n    return (dispatch, getState) => {\n\n        fetch(readuserHost + userId, removeUserOptions(token, credentials))\n        .then(handleResponse)\n        .then( (userData) => {\n            //console.log(\"message (authActions) \", userData)\n            removeJWTStore()\n            dispatch({ type: \"REMOVEUSER_SUCCESS\", userData })\n        })\n        .catch( (err) => {\n            //console.log(\"signup error\", err)            \n            dispatch( { type: 'REMOVEESER_ERROR', err });\n        })\n    }\n}\n","import { connect } from 'react-redux';\nimport ButtonAppBar from '../components/ButtonAppBar';\n\nimport { signOut } from '../store/actions/authActions';\nimport { getUser } from '../store/actions/userActions';\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        authError: state.auth.authError,\n        data : state.auth.data,\n        redirectToReferer: state.auth.redirectToReferer,\n        loading: state.auth.loading,\n        user: state.user.userData,\n        redirectToProfile: state.user.redirectToProfile,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {  \n    return {\n        signOut: () => dispatch( signOut() ), \n        getUser: (user) => dispatch( getUser(user) )\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonAppBar);\n","import React, {Component} from 'react';\nimport { Paper, withStyles, Grid, TextField, Button, FormControlLabel, \n            Checkbox, Container, Typography } from '@material-ui/core';\nimport { Face, Fingerprint } from '@material-ui/icons';\n\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst styles = theme => ({\n\n    paper: {\n        marginTop: 100,\n        display: \"flex\",\n        padding: 20,\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },    \n\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\n\nclass SignIn extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\",\n            loading: false,\n            redirectToReferer: false,\n            token: null,\n        };\n\n\n        //this.setState({\n        //    token: this.props.getFirebaseToken()  \n        //})\n\n    }\n\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        this.setState({ [name]: event.target.value });\n    };    \n\n\n    hanldeSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({ loading: true });\n        \n        const { email, password } = this.state;\n\n        console.log(\"signin state:\", this.state )\n        const user = {\n            email,\n            password\n        };        \n\n        this.props.signIn(user);\n\n        //this.setState( {token: this.props.getFirebaseToken() } )\n    }\n\n    authentication = (token) => {\n        if (typeof window  != \"undefined\") {\n\n            console.log(\"save localStorage\", token)\n            //localStorage.setItem(\"jtw\", token);\n            //this.setState(   \n            //    {redirectToReferer: true,}\n            //)\n        }\n    }\n\n    loginForm = (classes, authError, loading) => (\n\n        <Paper className={classes.padding}>\n        <div className={classes.margin}>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    <Face />\n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"email\" label=\"Email\" type=\"email\" fullWidth autoFocus required  onChange={this.handleChange(\"email\")} />\n                </Grid>\n            </Grid>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    <Fingerprint />\n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"password\" label=\"Password\" type=\"password\" fullWidth required  onChange={this.handleChange(\"password\")} />\n                </Grid>\n            </Grid>\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n                <Grid item>\n                    <FormControlLabel control={\n                        <Checkbox\n                            color=\"primary\"\n                        />\n                    } label=\"Remember me\" />\n                </Grid>\n                <Grid item>\n                    <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\"  component={Link} to={\"/forgetpass\"} >Forget password ?</Button>\n                </Grid>\n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.hanldeSubmit}  >Login</Button>\n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '2x' }}>\n                <Typography component={'span'}  variant=\"body2\" color=\"secondary\">{ authError ?  <p> {authError}  </p>  : null      } </Typography>\n            </Grid>\n\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                    <Typography variant=\"h3\">OR</Typography>\n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} component={Link} to={\"/signup\"}  >SignUp</Button>\n            </Grid>\n\n            {loading ? \n                <Grid container justify=\"center\" style={{ marginTop: '12px' }}>\n                    <Typography variant=\"h2\">LOADING</Typography>\n                </Grid>\n                : \n                \"\"\n            }\n\n\n        </div>\n        </Paper>\n\n    )\n\n    render() {\n        \n        const { classes,authError, data, redirectToReferer, firebaseAuth, firebaseToken } = this.props;\n        const {loading} = this.state.loading;\n\n        //console.log(\"SignIn (Component) firebaseAuthorization\", firebaseAuth)\n        //console.log(\"firebase Token \",  firebaseToken)\n        \n        if (data) {\n            console.log(\"logined user id \", data.user.email)        \n        }\n\n        if (firebaseAuth.emailVerified && redirectToReferer && firebaseToken) {\n            return <Redirect  to=\"/\"   />\n        }\n        if (!firebaseAuth.emailVerified) {\n            \n        }\n\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"md\">\n                    {this.loginForm( classes, authError, loading ) }\n                </Container>\n             </div>\n        );\n        \n    }\n\n}\n\n\nexport default withStyles(styles)(SignIn);\n","import { connect } from 'react-redux';\nimport SignIn from '../user/SignIn';\n\nimport { signIn, getFirebaseToken } from '../store/actions/authActions';\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        authError: state.auth.authError,\n        data : state.auth.data,\n        redirectToReferer: state.auth.redirectToReferer,\n        loading: state.auth.loading,\n        firebaseAuth: state.firebase.auth,\n        firebaseToken: state.auth.firebaseToken, \n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (newUser) => dispatch( signIn(newUser) ),\n        getFirebaseToken: () => dispatch( getFirebaseToken() ),\n        //signOut: () => dispatch( signOut() )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, {Component} from 'react';\nimport { Paper, withStyles, Grid, TextField, Button, Container } from '@material-ui/core';\nimport { Face,  Https } from '@material-ui/icons';\nimport PaletteIcon from '@material-ui/icons/Palette';\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n//import Link from '@material-ui/core/Link';\n\nimport { Link } from \"react-router-dom\";\n\nconst styles = theme => ({\n\n    paper: {\n        marginTop: 100,\n        display: \"flex\",\n        padding: 20,\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },    \n\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\n\nclass SinUp extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: \"\" ,\n            lastname: \"\",\n            nickname: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            error: \"\",\n            backgroundColor: \"\",\n            loading: false,\n        };\n\n    }\n\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        this.setState({ [name]: event.target.value });\n    };    \n\n\n    hanldeSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({ loading: true });\n        \n        const { firstname, lastname, email, password, backgroundColor } = this.state;\n\n        console.log(\"signin state:\", this.state )\n        const user = {\n            firstname,\n            lastname,\n            email,\n            password,\n            backgroundColor\n        };    \n        \n        this.props.signUp(user);\n    }\n\n    loginForm = (classes, authError) => (\n\n        <Paper className={classes.padding}>\n        <div className={classes.margin}>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    \n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"lastname\" label=\"姓\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange(\"lastname\")} />\n                </Grid>\n            </Grid>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    \n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"firstname\" label=\"名\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange(\"firstname\")} />\n                </Grid>\n            </Grid>\n\n\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    <Face />\n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"email\" label=\"Email\" type=\"email\" fullWidth autoFocus required  onChange={this.handleChange(\"email\")} />\n                </Grid>\n            </Grid>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    <Https />\n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"password\" label=\"Password\" type=\"password\" fullWidth required  onChange={this.handleChange(\"password\")} />\n                </Grid>\n            </Grid>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    <Https />\n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"password2\" label=\"Password2\" type=\"password\" fullWidth required  onChange={this.handleChange(\"password2\")} />\n                </Grid>\n            </Grid>\n\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n                <Grid item>\n                    <PaletteIcon />\n                </Grid>\n                <Grid item>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-helper-label\">Color</InputLabel>\n                            <Select\n                            labelId=\"demo-simple-select-helper-label\"\n                            id=\"demo-simple-select-helper\"\n                            value={this.state.backgroundColor}\n                            onChange={this.handleChange(\"backgroundColor\") }\n                            >\n                                <MenuItem value=\"\">\n                                    <em>None</em>\n                                </MenuItem>\n                                <MenuItem value={0}>赤</MenuItem>\n                                <MenuItem value={1}>ピンク</MenuItem>\n                                <MenuItem value={2}>紫</MenuItem>\n                                <MenuItem value={3}>インディゴ</MenuItem>\n                                <MenuItem value={4}>青</MenuItem>\n                                <MenuItem value={5}>ティール</MenuItem>\n                                <MenuItem value={6}>緑</MenuItem>\n                                <MenuItem value={7}>ライトグリーン</MenuItem>\n                                <MenuItem value={8}>アンバー</MenuItem>\n                                <MenuItem value={9}>オレンジ</MenuItem>\n                                <MenuItem value={10}>デイ−プオレンジ</MenuItem>\n\n                            </Select>\n                        <FormHelperText>Some important helper text</FormHelperText>\n                    </FormControl>            \n                </Grid>\n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.hanldeSubmit}  >SignUp</Button>    \n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '2x' }}>\n                <Typography variant=\"body2\" color=\"secondary\">{ authError ?  <p>  {authError}  </p> : null      } </Typography>\n            </Grid>\n\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                    <Typography variant=\"h3\">OR</Typography>\n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} component={Link} to={\"/signin\"}  >SignIn</Button>\n            </Grid>\n\n\n        </div>\n    </Paper>\n\n    );\n\n\n\n    render() {\n        \n        const { classes,authError } = this.props;\n\n\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"md\">\n                        {this.loginForm(classes,authError) }\n                </Container>\n             </div>\n        );\n        \n    }\n\n}\n\n\nexport default withStyles(styles)(SinUp);\n","\nimport { connect } from 'react-redux';\nimport SignUp from '../user/SignUp';\n\nimport { signUp } from '../store/actions/authActions';\n\n\nconst mapStateToProps = (state) => {\n    console.log(\"map state to props\", state);\n    return {\n        authError: state.auth.authError\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch( signUp(newUser) )\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, {Component} from 'react';\nimport {  withStyles, Grid,  Button } from '@material-ui/core';\n\nconst styles = theme => ({\n\n    paper: {\n        marginTop: 100,\n        display: \"flex\",\n        padding: 20,\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },    \n\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\n\nclass DeleteUser extends Component {\n\n    deleteConfirmed = () => {\n        let answer = window.confirm(\"Are you seriously sure you want to delete your account ?\")\n\n        const { data } = this.props;\n\n        const user = {\n            userId: data.user._id,\n            token: data.token\n        }\n\n        if (answer) {\n            console.log(\"DeleteUser user -> \", user)\n            this.props.removeUser(user)\n        }\n    }\n\n    render () {\n        \n\n        return (\n            <Grid container  style={{ marginTop: '20px' }}>\n                <Button color=\"secondary\" variant=\"contained\" style={{ textTransform: \"none\" }} onClick={this.deleteConfirmed}  >Delete</Button>\n            </Grid>\n\n        )\n    }\n\n}\n\n\nexport default withStyles(styles)(DeleteUser);","import { connect } from 'react-redux';\nimport DeleteUser from '../user/DeleteUser';\n\n//import { signOut } from '../store/actions/authActions';\nimport {removeUser} from '../store/actions/userActions';\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        authError: state.auth.authError,\n        data : state.auth.data,\n        redirectToReferer: state.auth.redirectToReferer,\n        loading: state.auth.loading,\n        user: state.user.userData,\n        userError: state.user.userError,\n        redirectToProfile: state.user.redirectToProfile,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeUser: (user) => dispatch( removeUser(user) )\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteUser);\n","import React, {Component} from 'react';\nimport { Paper, withStyles, Grid, TextField, Button, Container } from '@material-ui/core';\nimport PaletteIcon from '@material-ui/icons/Palette';\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Link from '@material-ui/core/Link';\n\nimport DeleteUser from '../containers/DeleteUser';\n//import { Link, Redirect } from \"react-router-dom\";\n\nconst styles = theme => ({\n\n    paper: {\n        marginTop: 100,\n        display: \"flex\",\n        padding: 20,\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },    \n\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: \"\" ,\n            lastname: \"\",\n            nickname: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            error: \"\",\n            backgroundColor: \"\",\n            loading: false,\n        };\n\n    }\n\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        this.setState({ [name]: event.target.value });\n    };    \n\n    hanldeSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({ loading: true });\n        \n        const { firstname, lastname, backgroundColor } = this.state;\n        const { data } = this.props\n\n        const user = {\n            firstname,\n            lastname,\n            backgroundColor,\n            userId: data.user._id,\n            token: data.token,\n        };    \n        \n        //console.log(\"Profile user to be submit.\", user )\n        //console.log(\"Profile data\", data )\n        \n        this.props.updateUser(user);\n    }\n\n    componentDidMount = () => {\n\n        //console.log(this.props.user);\n        const user = this.props.user;\n\n        if (user) {\n            this.setState({\n                firstname: user.firstname,\n                lastname: user.lastname,\n                email: user.email,\n                backgroundColor: user.backgroundColor,\n            })\n        }\n    }\n\n    loginForm = (classes, user, authError) => (\n\n        <Paper className={classes.padding}>\n        <div className={classes.margin}>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    \n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"lastname\" label=\"姓\" type=\"text\" value={user.lastname} fullWidth autoFocus required  onChange={this.handleChange(\"lastname\")} />\n                </Grid>\n            </Grid>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    \n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"firstname\" label=\"名\" type=\"text\" value={user.firstname} fullWidth autoFocus required  onChange={this.handleChange(\"firstname\")} />\n                </Grid>\n            </Grid>\n\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n                <Grid item>\n                    <PaletteIcon />\n                </Grid>\n                <Grid item>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-helper-label\">Color</InputLabel>\n                            <Select\n                            labelId=\"demo-simple-select-helper-label\"\n                            id=\"demo-simple-select-helper\"\n                            value={this.state.backgroundColor}\n                            onChange={this.handleChange(\"backgroundColor\") }\n                            >\n                                <MenuItem value={user.backgroundColor}>\n                                    <em>None</em>\n                                </MenuItem>\n                                <MenuItem value={0}>赤</MenuItem>\n                                <MenuItem value={1}>ピンク</MenuItem>\n                                <MenuItem value={2}>紫</MenuItem>\n                                <MenuItem value={3}>インディゴ</MenuItem>\n                                <MenuItem value={4}>青</MenuItem>\n                                <MenuItem value={5}>ティール</MenuItem>\n                                <MenuItem value={6}>緑</MenuItem>\n                                <MenuItem value={7}>ライトグリーン</MenuItem>\n                                <MenuItem value={8}>アンバー</MenuItem>\n                                <MenuItem value={9}>オレンジ</MenuItem>\n                                <MenuItem value={10}>デイ−プオレンジ</MenuItem>\n                            </Select>\n                        <FormHelperText>Some important helper text</FormHelperText>\n                    </FormControl>            \n                </Grid>\n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.hanldeSubmit}  >Update</Button>    \n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '2x' }}>\n                <Typography component={'span'}  variant=\"body2\" color=\"secondary\">{ authError ?  <p>  {authError}  </p> : null      } </Typography>\n            </Grid>\n\n            <DeleteUser />\n\n            <Link  href={\"/\"}>to Post Board screen</Link>\n            \n\n\n        </div>\n    </Paper>\n\n    );    \n\n    render() {\n\n\n        const user = this.state;\n        const {classes, userError} = this.props;\n\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"md\">\n                        {this.loginForm(classes, user, userError) }\n                </Container>\n            </div>\n        )\n    }\n\n}\n\n\nexport default withStyles(styles)(Profile);\n","import { connect } from 'react-redux';\nimport Profile from '../user/Profile';\n\n//import { signOut } from '../store/actions/authActions';\nimport {updateUser} from '../store/actions/userActions';\nimport {removeUser} from '../store/actions/userActions';\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        authError: state.auth.authError,\n        data : state.auth.data,\n        redirectToReferer: state.auth.redirectToReferer,\n        loading: state.auth.loading,\n        user: state.user.userData,\n        userError: state.user.userError,\n        redirectToProfile: state.user.redirectToProfile,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateUser: (oldUser) => dispatch( updateUser(oldUser) ),\n        removeUser: (user) => dispatch( removeUser(user) )\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React, {Component} from 'react';\nimport { Paper, withStyles, Grid, TextField, Button,  Container } from '@material-ui/core';\nimport { Face } from '@material-ui/icons';\n\nimport { Link } from \"react-router-dom\";\n\nconst styles = theme => ({\n\n    paper: {\n        marginTop: 100,\n        display: \"flex\",\n        padding: 20,\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    \n\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\n\nclass ForgetPassword extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            error: \"\",\n            loading: false,\n        };\n\n    }\n\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        this.setState({ [name]: event.target.value });\n    };    \n\n\n    hanldeSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({ loading: true });\n        \n        console.log(\"ForgetPasswords state --> \", this.state )\n                \n        this.props.forgetPassword(this.state);\n    }\n\n    loginForm = (classes) => (\n\n        <Paper className={classes.padding}>\n        <div className={classes.margin}>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    <Face />\n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"email\" label=\"Email\" type=\"email\" fullWidth autoFocus required  onChange={this.handleChange(\"email\")} />\n                </Grid>\n            </Grid>\n            <Grid container direction=\"column\" alignItems=\"flex-end\">\n                <Grid item xs={8}>\n\n                </Grid>\n                <Grid item xs={4}>\n                    <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\" component={Link} to={\"/signin\"}  >SignIn ?</Button>\n                </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.hanldeSubmit}  >Password Reset</Button>\n            </Grid>\n\n        </div>\n    </Paper>\n\n    );\n\n\n\n    render() {\n        \n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"md\">\n                        {this.loginForm(classes) }\n                </Container>\n             </div>\n        );\n        \n    }\n\n}\n\n\nexport default withStyles(styles)(ForgetPassword);","import { connect } from 'react-redux';\nimport ForgetPassword from '../user/ForgetPassword';\n\nimport { forgetPassword } from '../store/actions/authActions';\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        authError: state.auth.authError,\n        data : state.auth.data,\n        redirectToReferer: state.auth.redirectToReferer,\n        loading: state.auth.loading,\n        firebaseAuth: state.firebase.auth,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        forgetPassword: (email) => dispatch( forgetPassword(email) )\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgetPassword);\n","import React, {Component} from 'react';\nimport { Paper, withStyles, Grid, TextField, Button,  \n             Container, Typography } from '@material-ui/core';\nimport { Fingerprint } from '@material-ui/icons';\n\n//import { Link, Redirect } from \"react-router-dom\";\nimport {Link} from \"@material-ui/core\";\n \nconst styles = theme => ({\n\n    paper: {\n        marginTop: 100,\n        display: \"flex\",\n        padding: 20,\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },    \n\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\n\nclass ResetPassword extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            newpassword: \" \",\n            newpassword2: \"\",\n            error: \"\",\n            loading: false,\n            isValidNewPassword: false\n        };\n\n    }\n\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        this.setState({ [name]: event.target.value });\n\n\n        //console.log(\"newpassword same as confirmed pasword \", flag)\n    };    \n\n    componentDidMount = () => {\n\n        console.log(\"ResetPassword componentDidMount -> \",this.props.data);\n        const user = this.props.data.user;\n\n        if (user) {\n            this.setState({\n                email: user.email,\n            })\n        }\n    }\n\n\n    hanldeSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({ loading: true });\n        \n        const { email, newpassword } = this.state;\n\n        const credential = {\n            email: email,\n            newpassword\n        }\n        console.log(\"ResetPassword handleSubmit -> \", credential)\n        this.props.resetPassword(credential);\n    }\n\n    authentication = (token) => {\n        if (typeof window  != \"undefined\") {\n\n            console.log(\"save localStorage\", token)\n            //localStorage.setItem(\"jtw\", token);\n            //this.setState(   \n            //    {redirectToReferer: true,}\n            //)\n        }\n    }\n\n    loginForm = (classes, authError, passValidflag) => (\n\n        <Paper className={classes.padding}>\n        <div className={classes.margin}>\n\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    <Fingerprint />\n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"newpassword\" label=\"new Password\" type=\"password\" fullWidth required  onChange={this.handleChange(\"newpassword\")} />\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    <Fingerprint />\n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"newpassword2\" label=\"Confirm new Password\" type=\"password\" fullWidth required  onChange={this.handleChange(\"newpassword2\")} />\n                </Grid>\n            </Grid>\n\n\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                <Button disabled={passValidflag}  variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.hanldeSubmit}  >Reset Password</Button>\n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '2x' }}>\n                <Typography component={'span'}  variant=\"body2\" color=\"secondary\">{ authError ?  <p> {authError}  </p>  : null      } </Typography>\n            </Grid>\n\n            <Link  href={\"/\"}>to Post Board screen</Link>\n\n\n        </div>\n        </Paper>\n\n    )\n\n\n\n    render() {\n        \n        const { classes,authError } = this.props;\n\n        const isInValid = this.state.newpassword !== this.state.newpassword2;\n        console.log(\"newpassword same as confirmed pasword \", this.state.isValidNewPassword)     \n\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"md\">\n                    {this.loginForm( classes, authError, isInValid ) }\n                </Container>\n             </div>\n        );\n        \n    }\n\n}\n\n\nexport default withStyles(styles)(ResetPassword);\n","import { connect } from 'react-redux';\nimport ResetPassword from '../user/ResetPassword';\n\n//import { signOut } from '../store/actions/authActions';\nimport {updateUser, removeUser} from '../store/actions/userActions';\nimport {resetPassword} from '../store/actions/authActions';\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        authError: state.auth.authError,\n        data : state.auth.data,\n        redirectToReferer: state.auth.redirectToReferer,\n        loading: state.auth.loading,\n        user: state.user.userData,\n        userError: state.user.userError,\n        redirectToProfile: state.user.redirectToProfile,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateUser: (oldUser) => dispatch( updateUser(oldUser) ),\n        removeUser: (user) => dispatch( removeUser(user) ),\n        resetPassword: (user) => dispatch( resetPassword(user) )\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);\n","import React, {Component} from 'react';\nimport { Paper, withStyles, Grid, TextField, Button,  Container } from '@material-ui/core';\nimport PaletteIcon from '@material-ui/icons/Palette';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst styles = theme => ({\n\n    paper: {\n        marginTop: 100,\n        display: \"flex\",\n        padding: 20,\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },    \n\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\n\nclass EditUser extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: \"\" ,\n            lastname: \"\",\n            nickname: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            error: \"\",\n            backgroundColor: \"\",\n            loading: false,\n        };\n\n    }\n\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        this.setState({ [name]: event.target.value });\n    };    \n\n\n    hanldeSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({ loading: true });\n        \n        console.log(\"signin state:\", this.state )\n    }\n\n    loginForm = (classes) => (\n\n        <Paper className={classes.padding}>\n        <div className={classes.margin}>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    \n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"lastname\" label=\"姓\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange(\"lastname\")} />\n                </Grid>\n            </Grid>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item>\n                    \n                </Grid>\n                <Grid item md={true} sm={true} xs={true}>\n                    <TextField id=\"firstname\" label=\"名\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange(\"firstname\")} />\n                </Grid>\n            </Grid>\n\n\n            \n\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n                <Grid item>\n                    <PaletteIcon />\n                </Grid>\n                <Grid item>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-helper-label\">Color</InputLabel>\n                            <Select\n                            labelId=\"demo-simple-select-helper-label\"\n                            id=\"demo-simple-select-helper\"\n                            value={this.state.backgroundColor}\n                            onChange={this.handleChange(\"backgroundColor\") }\n                            >\n                                <MenuItem value=\"\">\n                                    <em>None</em>\n                                </MenuItem>\n                                <MenuItem value={0}>赤</MenuItem>\n                                <MenuItem value={1}>ピンク</MenuItem>\n                                <MenuItem value={2}>紫</MenuItem>\n                                <MenuItem value={3}>インディゴ</MenuItem>\n                                <MenuItem value={4}>青</MenuItem>\n                                <MenuItem value={5}>ティール</MenuItem>\n                                <MenuItem value={6}>緑</MenuItem>\n                                <MenuItem value={7}>ライトグリーン</MenuItem>\n                                <MenuItem value={8}>アンバー</MenuItem>\n                                <MenuItem value={9}>オレンジ</MenuItem>\n                                <MenuItem value={10}>デイ−プオレンジ</MenuItem>\n                            </Select>\n                        <FormHelperText>Some important helper text</FormHelperText>\n                    </FormControl>            \n                </Grid>\n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.hanldeSubmit}  >Edit</Button>\n            </Grid>\n        </div>\n    </Paper>\n\n    );\n\n\n\n    render() {\n        \n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"md\">\n                        {this.loginForm(classes) }\n                </Container>\n             </div>\n        );\n        \n    }\n\n}\n\n\nexport default withStyles(styles)(EditUser);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\n\n\nconst PrivateRoute = ({component: Component, ...rest }) => (\n\n    //const { data } = this.props;\n\n    //props means components passed down to this private route component\n    <Route\n        {...rest} \n        render={ props => \n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{pathname: \"/signin\", state: {from: props.location}   \n            }} />\n        )\n    }\n    />\n    \n);\n\n\n\nexport default PrivateRoute;","\n\nexport const isAuthenticated = () => {\n    if (typeof window == 'undefined') {\n        return false;\n    }\n\n    if (localStorage.getItem('jwt')) {\n        return JSON.parse(localStorage.getItem('jwt'));\n    } else {\n        return false;\n    }\n};","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport ButtonAppBar from './containers/ButtonAppBar';\n\nimport SignIn from './containers/SignIn';\nimport SignUp from './containers/SignUp';\nimport Profile from './containers/Profile';\n\n\nimport ForgetPassword from './containers/ForgetPassword';\nimport ResetPassword from './containers/ResetPassword';\nimport EditUser from './user/EditUser';\n\nimport PrivateRoute from './auth/PrivateRoute';\n\nconst Root = () => {\n\n    return ( \n      <Router>\n          <Switch>\n            <Route exact path=\"/\" component={ ButtonAppBar } />\n            <Route exact path=\"/menu\" component={ ButtonAppBar } />\n            \n            <Route exact path=\"/signin\" component={ SignIn } />\n            <Route exact path=\"/signup\" component={ SignUp } />\n            <PrivateRoute exact path=\"/user/:userId\" component={ Profile } />\n\n            <PrivateRoute exact path=\"/reset-password\" component={ ResetPassword } />\n\n            <Route exact path=\"/forgetpass\" component={ ForgetPassword } />\n            <Route exact path=\"/edituser\" component={ EditUser } />\n            \n\n          </Switch>\n      </Router>\n    )\n  };\n\nexport default Root;\n","import React from 'react';\nimport Root from './Root';\n\n\nconst App = () => {\n    return (\n        <Root />\n        );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n//import { saveStore, loadStore } from '../../utils/storage';\n\n//const loadstore = loadStore()\n\nconst InitState = {\n    postData: null,\n    postError: null,\n}\n\nconst tweetReducer = (state = InitState, action ) => {\n\n    switch(action.type) {\n\n        case 'POST_SUCCESS':\n            console.log(\"create_post new data from tweetReducer \", action.data  )\n            console.log(\"create_post old state from tweetReducer \", ...state.postData  )\n\n            return {\n                //...state, \n                postData: state.postData.concat([action.data]),\n                postError: null\n            }\n            \n        case 'POST_ERROR':\n            console.log(\"create_tweet_error from tweetReducer \", action.err  )\n            return {\n                ...state, \n                single_data: null,\n                postError: action.err\n            }\n\n        case 'UPDATEPOST_SUCCESS':\n            console.log(\"update_post new data from tweetReducer \", action.data  )\n            console.log(\"update_post old state from tweetReducer \", ...state.postData  )\n\n            return {\n                //...state, \n                postData: state.postData.map( (post) => {\n                        if (post._id === action.data._id) {\n                            return  action.data  \n                        }\n                        else {\n                            return post;\n                        }\n                    }\n                ),\n                postError: null\n            }\n            \n        case 'UPDATEPOST_ERROR':\n            console.log(\"update_tweet_error from tweetReducer \", action.err  )\n            return {\n                ...state, \n                postData: null,\n                postError: action.err\n            }\n    \n        case 'REMOVEPOST_SUCCESS':\n            console.log(\"remove_post new data from tweetReducer \", action.data  )\n            console.log(\"remove_post old state from tweetReducer \", ...state.postData  )\n\n            return {\n                //...state, \n                postData: state.postData.filter(item => item._id !== action.data._id),\n                postError: null\n            }\n            \n        case 'REMOVEPOST_ERROR':\n            console.log(\"remove_tweet_error from tweetReducer \", action.err  )\n            return {\n                ...state, \n                single_data: null,\n                postError: action.err\n            }\n    \n        case 'GETPOST_SUCCESS':\n            console.log(\"get_tweet from tweetReducer \", action.data  )\n            return {\n                ...state, \n                postData: action.data,\n                postError: \"ok\"\n            }\n            \n        case 'GETPOST_ERROR':\n            console.log(\"get_tweet_error from tweetReducer \", action.err  )\n            return {\n                ...state, \n                data: null,\n                postError: action.err\n            }\n\n        case 'COMMENT_SUCCESS':\n            console.log(\"comment new data from tweetReducer \", action.data  )\n            //console.log(\"remove_post old state from tweetReducer \", ...state.postData  )\n\n            return {\n                //...state, \n                postData: state.postData.map( (post) => {\n                    if (post._id === action.data._id) {\n                        return  action.data  \n                    }\n                    else {\n                        return post;\n                    }\n                }\n            ),\n            postError: null\n        }\n            \n        case 'COMMENT_ERROR':\n            console.log(\"comment_error from tweetReducer \", action.err  )\n            return {\n                ...state, \n                postData: null,\n                postError: action.err\n            }\n    \n        \n        default:\n            return state;   \n    }\n}\n\n\nexport default tweetReducer;","\n\nimport { loadJWTStore, removeJWTStore, saveJWTStore } from '../../utils/storage';\n\nconst InitState = {\n    authError : null,\n    redirectToReferer: false,\n    loading: false,\n    data: loadJWTStore(),\n}\n\n\nconst authReducer = (state = InitState, action ) => {\n\n    switch(action.type) {\n        case 'SIGNUP_SUCCESS':\n            //console.log(\"successfully signup from authreducer.\")\n            return {\n                ...state,\n                authError: \"signup_successed\"\n            }\n\n        case 'SIGNUP_ERROR':\n            //console.log(\"signup error from authreducer.\")\n            return {\n                ...state,\n                authError: action.err\n            }\n    \n\n        case 'SIGNIN_SUCCESS':\n            //console.log(action)\n            saveJWTStore(  action.data  )\n            return {\n                ...state,\n                authError: \"signin_successed\",\n                data: action.data,\n                firebaseToken: action.firebaseToken,\n                redirectToReferer: true\n            }\n\n        case 'SIGNIN_ERROR':\n            //console.log(\"signup error from authreducer.\")\n            return {\n                ...state,\n                authError: action.err,\n                data : null,\n                redirectToReferer: false,\n                loading: false\n            }\n    \n        case 'SIGNOUT_SUCCESS':\n\n            removeJWTStore()\n            console.log(\"remove JWT from authreducr.\")\n            return {\n                ...state,\n                redirectToReferer: false,\n                data : null,\n                firebaseToken: null,\n                authError: null\n            }\n\n\n        case 'SIGNOUT_ERROR':\n            //console.log(\"signup error from authreducer.\")\n            return {\n                ...state,\n                authError: action.err\n            }\n\n            \n        case 'RESETPASS_SUCCESS':\n            //console.log(\"successfully signup from authreducer.\")\n            return {\n                ...state,\n                authError: \"reset password_successed\"\n            }\n\n        case 'RESETPASS_ERROR':\n            //console.log(\"signup error from authreducer.\")\n            return {\n                ...state,\n                authError: action.err\n            }\n\n            \n        case 'FOREGETPASSWORD_SUCCESS':\n            //console.log(\"successfully signup from authreducer.\")\n            return {\n                ...state,\n                authError: \"reset password_successed\"\n            }\n\n        case 'FOREGETPASSWORD_ERROR':\n            //console.log(\"signup error from authreducer.\")\n            return {\n                ...state,\n                authError: action.err\n            }\n    \n\n        default:\n            return state\n            \n\n    }\n\n}\n\nexport default authReducer;","\n\nconst InitState = {\n    userError : null,\n    userData: null, \n    redirectToProfile: false\n}\n\n\nconst userReducer = (state = InitState, action ) => {\n\n    switch(action.type) {\n        case 'GETUSER_SUCCESS':\n\n            return {\n                ...state,\n                userData: action.userData,\n                userError: \"getuser_successed\",\n                redirectToProfile: true\n\n            }\n\n        case 'GETUSER_ERROR':\n\n            return {\n                ...state,\n                userData: null,\n                userError: action.err,\n                redirectToProfile: false\n            }\n\n        case 'UPDATEUSER_SUCCESS':\n\n            return {\n                ...state,\n                userData: action.userData,\n                userError: \"updateuser_successed\",\n                redirectToProfile: false\n\n            }\n\n        case 'UPDATEUSER_ERROR':\n\n            return {\n                ...state,\n                userData: null,\n                userError: action.err,\n                redirectToProfile: false\n            }\n\n        case 'REMOVEUSER_SUCCESS':\n\n            return {\n                ...state,\n                userData: action.userData,\n                userError: \"remove user_successed\",\n                redirectToProfile: false\n\n            }\n\n        case 'REMOVEUSER_ERROR':\n\n            return {\n                ...state,\n                userData: null,\n                userError: action.err,\n                redirectToProfile: false\n            }\n                \n\n        default:\n            return state\n\n    }\n\n\n\n}\n\nexport default userReducer;","import tweetReducer from './tweetReducers';\nimport authReducer from './authReducers';\nimport userReducer from './userReducers';\n\n// from firebase \nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nimport { combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers(\n    {\n        user: userReducer,\n        tweets: tweetReducer,\n        auth: authReducer,\n        firestore: firestoreReducer,\n        firebase: firebaseReducer,\n    }\n);\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBVhvfEL9Rljwctai9YF-eosn9025BV-mc\",\n    authDomain: \"mytwitter-d4927.firebaseapp.com\",\n    databaseURL: \"https://mytwitter-d4927.firebaseio.com\",\n    projectId: \"mytwitter-d4927\",\n    storageBucket: \"mytwitter-d4927.appspot.com\",\n    messagingSenderId: \"201502672374\",\n    appId: \"1:201502672374:web:c4aaa4ffcc5800048db3d7\"\n\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({timestampsInSnapshots:true})\n\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\n\nimport thunk from 'redux-thunk';\n\n// import firebase tools \n//import { reduxFirestore,   getFirestore } from 'redux-firestore';\nimport { createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider,  getFirebase } from 'react-redux-firebase';\n\nimport fbConfig from './config/fbConfig';\n\nconst myconfig = {\n    userProfile: 'users', // where profiles are stored in database\n    useFirestoreForProfile: true // use Firestore for profile instead of RTDB\n  }\n\n//for Redux DevTools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    //\n    //applyMiddleware(thunk),\n    composeEnhancers( applyMiddleware(thunk.withExtraArgument( getFirebase ) ) ), \n    // applyMiddleware関数でredux-loggerを設定\n  );\n\n  const rrfProps = {\n    firebase: fbConfig,\n    config: myconfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n    };\n\n  \n  \nReactDOM.render(  \n\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <App />\n        </ReactReduxFirebaseProvider>\n    </Provider>, \n    \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}